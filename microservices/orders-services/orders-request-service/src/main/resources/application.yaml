server:
  port: 8080


spring.application:
    name: ride-request-service-application
spring.kafka:
    bootstrap-servers:
      - localhost:9092
    properties:
      schema.registry.url: http://localhost:8081
    consumer:
      group-id: group_id
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
    template:
      default-topic:


spring.datasource:
    url: jdbc:postgresql://localhost:5432/postgresdb
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: postgres
    hikari:
      connectionTimeout: 30000
      idleTimeout: 30000
      maxLifetime: 1800000
      minimumIdle: 5
      maximumPoolSize: 20
      poolName: SpringBootJPAHikariCP
  #      schema: users
spring:
  jpa:
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation=true:
spring.jpa:
    properties:
      hibernate:
        jdbc.lob.non_contextual_creation: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate


jwt.expiration.time: 90000